let story = 'Last weekend, I took literally the most beautiful bike ride of my life. The route is called "The 9W to Nyack" and it actually stretches all the way from Riverside Park in Manhattan to South Nyack, New Jersey. It\'s really an adventure from beginning to end! It is a 48 mile loop and it basically took me an entire day. I stopped at Riverbank State Park to take some extremely artsy photos. It was a short stop, though, because I had a really long way left to go. After a quick photo op at the very popular Little Red Lighthouse, I began my trek across the George Washington Bridge into New Jersey.  The GW is actually very long - 4,760 feet! I was already very tired by the time I got to the other side.  An hour later, I reached Greenbrook Nature Sanctuary, an extremely beautiful park along the coast of the Hudson.  Something that was very surprising to me was that near the end of the route you actually cross back into New York! At this point, you are very close to the end.';

/// FIND THE WORD THAT APEARS THE GREATEST NUMBER OF TIMES
console.log('Write a function that finds the word that appears the greatest number of times. \n')

/// Remove puntuation and capitalisation

/// Create an array of accepted characters to be used to filter out punctuation
const acceptedChars = [' ', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];

/// Replace capitals with lower case
let lowerCase = story.toLowerCase();

/// Create an array of individual characters
let lowerCaseChars = lowerCase.split('');

/// Filter out punctuation characters
let noPunctuationChars = lowerCaseChars.filter(char => acceptedChars.includes(char));

/// Recreate story with no capitals or punctuation
let noPunctuationStory = noPunctuationChars.join('');

/// Replace double spaces with single spaces to eliminate blank entries in word arrays
let noPunctuationSentences = noPunctuationStory.split('  ');
let removeDoubleSpaces = noPunctuationSentences.join(' ');

/// Create an array of story words
let noPunctuationWords = removeDoubleSpaces.split(' ');

/// Create an array of individual words
let noDup = [];
noPunctuationWords.forEach(function(word) {
  if (!noDup.includes(word)) {
    noDup.push(word);
  }
});

/// Count how many instances of each individual word
let wordCounting =[];
noDup.forEach(function(countWord) {
  let count = 0;
  noPunctuationWords.forEach(function(storyWord) {
    if (countWord === storyWord) {
      count++;
    }
  });
  /// Create a 2D array to store each word and its count
  wordCounting.push([count, countWord]);
});

/// Sort the array by decending word count
wordCounting.sort(function(a, b) {
  return b[0] - a[0];
});

/// Log the most used word
console.log('The Most Used Word is: '.toUpperCase())
for (let i = 0; wordCounting[i][0] > 8; i++) {
  console.log(wordCounting[i][1].toUpperCase() + '. This word appears ' + wordCounting[i][0] + ' times')
}

let storyWords = story.split(' ');
//console.log(storyWords.length);

let mostFrequent = storyWords.filter(function(words) {
  let countWords = 0;
})

console.log("For the overused words, remove it every other time it appears. \n")
// function to remove the over used word every other time
let overUsedWords = ['really', 'very', 'basically'];

//console.log(removeOverUsedWords);

let unnecessaryWords = ['extremely', 'literally', 'actually' ];

let betterWords = storyWords.filter(function(words){
  return !unnecessaryWords.includes(words)
})
//console.log(betterWords);

let reallyCount = 0;
let veryCount = 0;
let basicallyCount = 0;

for (word of storyWords) {
  if (word === overUsedWords[0]) {
    reallyCount += 1
  } else if(word === overUsedWords[1]) {
    veryCount += 1
  } else if (word === overUsedWords[2]) {
    basicallyCount += 1
  }
}

//console.log("Really Count: ", reallyCount);
//console.log("Very Count: ", veryCount);
//console.log("Basically Count: ", basicallyCount);

let sentencesCount = 0

for(word of storyWords) {
  if (word[word.length - 1] === "." || word[word.length -1] === "!") {
    sentencesCount += 1
  }
}
//console.log("There are", sentencesCount, "in the story.");
//console.log("Word Count of story is", storyWords.length);

//console.log(betterWords.join(" "));

/// count and log over used words
overUsedWords.forEach(function(overWord) {
  let overWordCount = 0;
  betterWords.filter(function(storyWord) {
    if (overWord === storyWord) {
      overWordCount++;
    }
  });
  if (overWordCount != 1) {
  console.log('The Word ' + overWord.toUpperCase() + ' was used ' + overWordCount + ' times\n');
} else {
  console.log('The Word ' + overWord.toUpperCase() + ' was used ' + overWordCount + ' time\n');
}
});

///Create an array to hold a count for each item in 'overusedWords'
let overusedWC = overUsedWords.map(function() {
  return 0;
});

///Initiate a count for removed words
let removedWC = 0;

///Filter out every other instance of the contents of 'overUsedWords'
let lessOverusedWords = betterWords.map(function(storyWord) {
  if (!overUsedWords.includes(storyWord)) {
    return storyWord;
  } else {
    let pos = overUsedWords.indexOf(storyWord);
    if (overusedWC[pos] < 1) {
      overusedWC[pos]++;
      return storyWord;
    } else { ///Add alternative word
      overusedWC[pos] = 0;
      removedWC++;
      ///Here we could pull from an array of alternative words
      return '';
     }
  }
});

/// Log results
console.log(lessOverusedWords.join(' ') + '\n')
console.log(removedWC + ' overused words were removed \n');


overUsedWords.forEach(function(overWord) {
  let overWordCount = 0;
  lessOverusedWords.filter(function(storyWord) {
    if (overWord === storyWord) {
      overWordCount++;
    }
  });
  if (overWordCount != 1) {
  console.log('The Word ' + overWord.toUpperCase() + ' was used ' + overWordCount + ' times\n');
} else {
  console.log('The Word ' + overWord.toUpperCase() + ' was used ' + overWordCount + ' time\n');
}
});
